E_TICARET DATABASE RAPOR
Projem bir e ticaret sitesi  databesidir. Bu projede bir müşteri bilgileri, ürün bilgileri, sipariş bilgisi ve fatura bilgileri bulunmaktadır.
Ömer Can Erdem


*************************************************************Tablolarımızın Scriptleri

/****** Object:  Table [dbo].[ADDRESS]    Script Date: 12.02.2024 17:28:45 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO

CREATE TABLE [dbo].[ADDRESS](
	[ADDRESS_ID] [int] IDENTITY(1,1) NOT NULL,
	[CUSTOMER_ID] [int] NOT NULL,
	[COUNTRY_ID] [int] NOT NULL,
	[CITY_ID] [int] NOT NULL,
	[TOWN_ID] [int] NOT NULL,
	[ADDRESS_TEXT] [varchar](500) NOT NULL,
 CONSTRAINT [PK__ADRESS__5DD6DC90390E78A4] PRIMARY KEY CLUSTERED 
(
	[ADDRESS_ID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]
GO

ALTER TABLE [dbo].[ADDRESS]  WITH CHECK ADD  CONSTRAINT [FK_ADRESS_CITY] FOREIGN KEY([CITY_ID])
REFERENCES [dbo].[CITY] ([CITY_ID])
GO

ALTER TABLE [dbo].[ADDRESS] CHECK CONSTRAINT [FK_ADRESS_CITY]
GO

ALTER TABLE [dbo].[ADDRESS]  WITH CHECK ADD  CONSTRAINT [FK_ADRESS_COUNTRY] FOREIGN KEY([COUNTRY_ID])
REFERENCES [dbo].[COUNTRY] ([COUNTRY_ID])
GO

ALTER TABLE [dbo].[ADDRESS] CHECK CONSTRAINT [FK_ADRESS_COUNTRY]
GO

ALTER TABLE [dbo].[ADDRESS]  WITH CHECK ADD  CONSTRAINT [FK_ADRESS_CUSTOMER] FOREIGN KEY([CUSTOMER_ID])
REFERENCES [dbo].[CUSTOMER] ([CUSTOMER_ID])
GO

ALTER TABLE [dbo].[ADDRESS] CHECK CONSTRAINT [FK_ADRESS_CUSTOMER]
GO

ALTER TABLE [dbo].[ADDRESS]  WITH CHECK ADD  CONSTRAINT [FK_ADRESS_TOWN] FOREIGN KEY([TOWN_ID])
REFERENCES [dbo].[TOWN] ([TOWN_ID])
GO

ALTER TABLE [dbo].[ADDRESS] CHECK CONSTRAINT [FK_ADRESS_TOWN]
GO

USE [E_Ticaret]
GO

/****** Object:  Table [dbo].[BASKET]    Script Date: 12.02.2024 17:29:14 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO

CREATE TABLE [dbo].[BASKET](
	[BASKET_ID] [int] IDENTITY(1,1) NOT NULL,
	[CUSTOMER_ID] [int] NOT NULL,
	[CREAT_DATE] [smalldatetime] NOT NULL,
 CONSTRAINT [PK__BASKET__A9B57B17267220A8] PRIMARY KEY CLUSTERED 
(
	[BASKET_ID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]
GO

ALTER TABLE [dbo].[BASKET]  WITH CHECK ADD  CONSTRAINT [FK__BASKET__CUSTOMER__1BFD2C07] FOREIGN KEY([CUSTOMER_ID])
REFERENCES [dbo].[CUSTOMER] ([CUSTOMER_ID])
GO

ALTER TABLE [dbo].[BASKET] CHECK CONSTRAINT [FK__BASKET__CUSTOMER__1BFD2C07]
GO


USE [E_Ticaret]
GO

/****** Object:  Table [dbo].[BASKET_DETAIL]    Script Date: 12.02.2024 17:29:34 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO

CREATE TABLE [dbo].[BASKET_DETAIL](
	[BASKET_DETAIL_ID] [int] IDENTITY(1,1) NOT NULL,
	[BASKET_ID] [int] NOT NULL,
	[PRODUCT_ID] [int] NOT NULL,
	[AMOUNT] [float] NOT NULL,
	[PRICE] [float] NOT NULL,
	[TOTAL_PRICE] [float] NOT NULL,
	[CREAT_DATE] [smalldatetime] NOT NULL,
 CONSTRAINT [PK__BASKET_D__EF84252F8FDFC0C8] PRIMARY KEY CLUSTERED 
(
	[BASKET_DETAIL_ID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]
GO

ALTER TABLE [dbo].[BASKET_DETAIL]  WITH CHECK ADD  CONSTRAINT [FK__BASKET_DE__BASKE__21B6055D] FOREIGN KEY([BASKET_ID])
REFERENCES [dbo].[BASKET] ([BASKET_ID])
GO

ALTER TABLE [dbo].[BASKET_DETAIL] CHECK CONSTRAINT [FK__BASKET_DE__BASKE__21B6055D]
GO

ALTER TABLE [dbo].[BASKET_DETAIL]  WITH CHECK ADD  CONSTRAINT [FK__BASKET_DE__PRODU__22AA2996] FOREIGN KEY([PRODUCT_ID])
REFERENCES [dbo].[PRODUCT] ([PRODUCT_ID])
GO

ALTER TABLE [dbo].[BASKET_DETAIL] CHECK CONSTRAINT [FK__BASKET_DE__PRODU__22AA2996]
GO


USE [E_Ticaret]
GO

/****** Object:  Table [dbo].[CITY]    Script Date: 12.02.2024 17:29:46 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO

CREATE TABLE [dbo].[CITY](
	[CITY_ID] [int] IDENTITY(1,1) NOT NULL,
	[CITY_NAME] [varchar](100) NOT NULL,
 CONSTRAINT [PK__CITY__6E64DFEAEB475F0A] PRIMARY KEY CLUSTERED 
(
	[CITY_ID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]
GO


USE [E_Ticaret]
GO

/****** Object:  Table [dbo].[COUNTRY]    Script Date: 12.02.2024 17:29:55 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO

CREATE TABLE [dbo].[COUNTRY](
	[COUNTRY_ID] [int] IDENTITY(1,1) NOT NULL,
	[COUNTRY_NAME] [varchar](100) NOT NULL,
 CONSTRAINT [PK__COUNTRY__31027163FC497FCE] PRIMARY KEY CLUSTERED 
(
	[COUNTRY_ID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]
GO


USE [E_Ticaret]
GO

/****** Object:  Table [dbo].[CUSTOMER]    Script Date: 12.02.2024 17:30:05 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO

CREATE TABLE [dbo].[CUSTOMER](
	[CUSTOMER_ID] [int] IDENTITY(1,1) NOT NULL,
	[CUSTOMER_USERNAME] [varchar](50) NOT NULL,
	[CUSTOMER_PASSWORD] [varchar](50) NOT NULL,
	[NAME_SURNAME] [varchar](100) NOT NULL,
	[EMAIL] [varchar](100) NOT NULL,
	[GENDER] [varchar](1) NOT NULL,
	[BIRTHDATE] [date] NOT NULL,
	[PHONE] [varchar](15) NOT NULL,
 CONSTRAINT [PK_CUSTOMER] PRIMARY KEY CLUSTERED 
(
	[CUSTOMER_ID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]
GO


USE [E_Ticaret]
GO

/****** Object:  Table [dbo].[INVOICE]    Script Date: 12.02.2024 17:30:18 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO

CREATE TABLE [dbo].[INVOICE](
	[INVOICE_ID] [int] IDENTITY(1,1) NOT NULL,
	[ORDER_ID] [int] NOT NULL,
	[INVOICE_NO] [varchar](50) NOT NULL,
	[CREAT_DATE] [datetime] NOT NULL,
 CONSTRAINT [PK__INVOICE__0CE91F080E24C31C] PRIMARY KEY CLUSTERED 
(
	[INVOICE_ID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]
GO

ALTER TABLE [dbo].[INVOICE]  WITH CHECK ADD  CONSTRAINT [FK__INVOICE__ORDER_I__300424B4] FOREIGN KEY([ORDER_ID])
REFERENCES [dbo].[ORDER_] ([ORDER_ID])
GO

ALTER TABLE [dbo].[INVOICE] CHECK CONSTRAINT [FK__INVOICE__ORDER_I__300424B4]
GO


USE [E_Ticaret]
GO

/****** Object:  Table [dbo].[INVOICE_DETAIL]    Script Date: 12.02.2024 17:30:30 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO

CREATE TABLE [dbo].[INVOICE_DETAIL](
	[INVOICE_DETAIL_ID] [int] IDENTITY(1,1) NOT NULL,
	[INVOICE_ID] [int] NOT NULL,
	[ORDER_DETAIL_ID] [int] NOT NULL,
	[PRODUCT_ID] [int] NOT NULL,
	[PRICE] [float] NOT NULL,
	[AMOUNT] [float] NOT NULL,
	[TOTAL_PRICE] [float] NOT NULL,
 CONSTRAINT [PK__INVOICE___215C4D2A846EDFE3] PRIMARY KEY CLUSTERED 
(
	[INVOICE_DETAIL_ID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]
GO

ALTER TABLE [dbo].[INVOICE_DETAIL]  WITH CHECK ADD  CONSTRAINT [FK__INVOICE_D__INVOI__32E0915F] FOREIGN KEY([INVOICE_ID])
REFERENCES [dbo].[INVOICE] ([INVOICE_ID])
GO

ALTER TABLE [dbo].[INVOICE_DETAIL] CHECK CONSTRAINT [FK__INVOICE_D__INVOI__32E0915F]
GO


USE [E_Ticaret]
GO

/****** Object:  Table [dbo].[ORDER_]    Script Date: 12.02.2024 17:30:39 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO

CREATE TABLE [dbo].[ORDER_](
	[ORDER_ID] [int] IDENTITY(1,1) NOT NULL,
	[CUSTOMER_ID] [int] NOT NULL,
	[ADDRESS_ID] [int] NOT NULL,
	[BASKET_ID] [int] NOT NULL,
	[CREAT_DATE] [smalldatetime] NOT NULL,
 CONSTRAINT [PK__ORDER___460A9464BA1F5654] PRIMARY KEY CLUSTERED 
(
	[ORDER_ID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]
GO


USE [E_Ticaret]
GO

/****** Object:  Table [dbo].[ORDER_DETAIL]    Script Date: 12.02.2024 17:30:48 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO

CREATE TABLE [dbo].[ORDER_DETAIL](
	[ORDER_DETAIL_ID] [int] IDENTITY(1,1) NOT NULL,
	[ORDER_ID] [int] NOT NULL,
	[BASKET_DETAIL_ID] [int] NOT NULL,
	[PRODUCT_ID] [int] NOT NULL,
	[AMOUNT] [float] NOT NULL,
	[PRICE] [float] NOT NULL,
	[TOTAL_PRICE] [float] NOT NULL,
 CONSTRAINT [PK__ORDER_DE__FF1651765B3D48E7] PRIMARY KEY CLUSTERED 
(
	[ORDER_DETAIL_ID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]
GO

ALTER TABLE [dbo].[ORDER_DETAIL]  WITH CHECK ADD  CONSTRAINT [FK__ORDER_DET__ORDER__2C3393D0] FOREIGN KEY([ORDER_ID])
REFERENCES [dbo].[ORDER_] ([ORDER_ID])
GO

ALTER TABLE [dbo].[ORDER_DETAIL] CHECK CONSTRAINT [FK__ORDER_DET__ORDER__2C3393D0]
GO

ALTER TABLE [dbo].[ORDER_DETAIL]  WITH CHECK ADD  CONSTRAINT [FK__ORDER_DET__PRODU__2D27B809] FOREIGN KEY([PRODUCT_ID])
REFERENCES [dbo].[PRODUCT] ([PRODUCT_ID])
GO

ALTER TABLE [dbo].[ORDER_DETAIL] CHECK CONSTRAINT [FK__ORDER_DET__PRODU__2D27B809]
GO


USE [E_Ticaret]
GO

/****** Object:  Table [dbo].[PAYMENT]    Script Date: 12.02.2024 17:30:58 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO

CREATE TABLE [dbo].[PAYMENT](
	[PAYMENT_ID] [int] IDENTITY(1,1) NOT NULL,
	[BASKET_ID] [int] NULL,
	[TOTAL_PRICE] [float] NULL,
	[PAYMENT_TYPE] [int] NOT NULL,
	[CREAT_DATE] [smalldatetime] NOT NULL,
 CONSTRAINT [PK__PAYMENT__D2C4FF46927FEE32] PRIMARY KEY CLUSTERED 
(
	[PAYMENT_ID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]
GO

ALTER TABLE [dbo].[PAYMENT]  WITH CHECK ADD  CONSTRAINT [FK__PAYMENT__BASKET___25869641] FOREIGN KEY([BASKET_ID])
REFERENCES [dbo].[BASKET] ([BASKET_ID])
GO

ALTER TABLE [dbo].[PAYMENT] CHECK CONSTRAINT [FK__PAYMENT__BASKET___25869641]
GO


USE [E_Ticaret]
GO

/****** Object:  Table [dbo].[PRODUCT]    Script Date: 12.02.2024 17:31:06 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO

CREATE TABLE [dbo].[PRODUCT](
	[PRODUCT_ID] [int] IDENTITY(1,1) NOT NULL,
	[PRODUCT_CODE] [varchar](20) NOT NULL,
	[PRODUCT_NAME] [varchar](100) NOT NULL,
	[PRICE] [float] NOT NULL,
 CONSTRAINT [PK__PRODUCT__52B4176362B27367] PRIMARY KEY CLUSTERED 
(
	[PRODUCT_ID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]
GO


USE [E_Ticaret]
GO

/****** Object:  Table [dbo].[TOWN]    Script Date: 12.02.2024 17:31:14 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO

CREATE TABLE [dbo].[TOWN](
	[TOWN_ID] [int] IDENTITY(1,1) NOT NULL,
	[CITY_ID] [int] NOT NULL,
	[TOWN_NAME] [varchar](100) NOT NULL,
 CONSTRAINT [PK__DISTRICT__F24D1D90BDAC572C] PRIMARY KEY CLUSTERED 
(
	[TOWN_ID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]
GO

ALTER TABLE [dbo].[TOWN]  WITH CHECK ADD  CONSTRAINT [FK_TOWN_CITY] FOREIGN KEY([CITY_ID])
REFERENCES [dbo].[CITY] ([CITY_ID])
GO

ALTER TABLE [dbo].[TOWN] CHECK CONSTRAINT [FK_TOWN_CITY]
GO


******************************************************************************


************************************ Random Veri Olusturma Script


DECLARE @I AS INT=0
WHILE @I<1
BEGIN
DECLARE @CUSTOMER_ID AS INT
DECLARE @BASKET_ID AS INT
DECLARE @PRODUCT_ID AS INT
DECLARE @ORDER_ID AS INT
DECLARE @CREAT_DATE AS DATETIME

DECLARE @DATE2 AS DATETIME
DECLARE @RAND AS FLOAT
DECLARE @ADDRESS_ID AS INT 

--CUSTOMER SEÇİLİYOR
SET @RAND =RAND()*10000
SET @CUSTOMER_ID =@RAND
SET @RAND =RAND()*365
SET @CREAT_DATE =DATEADD(DAY,-@RAND,GETDATE())
SET @DATE2=@CREAT_DATE 
DECLARE @ADDRESSCOUNT AS INT
SELECT @ADDRESSCOUNT=COUNT(*) FROM ADDRESS WHERE CUSTOMER_ID=@CUSTOMER_ID 

SELECT @ADDRESS_ID=ADDRESS_ID  FROM (SELECT 
  ROW_NUMBER() OVER(  ORDER BY ADDRESS_ID ASC) AS ROWNR,
* FROM ADDRESS WHERE CUSTOMER_ID=@CUSTOMER_ID
) T WHERE ROWNR=ROUND(RAND()*@ADDRESSCOUNT,0)
--BASKET
INSERT INTO BASKET(CUSTOMER_ID, CREAT_DATE)
VALUES (@CUSTOMER_ID,@CREAT_DATE)
SET @BASKET_ID=@@IDENTITY
--BASKETDETAIL
DECLARE @PRODUCTCOUNT AS INT
SET @PRODUCTCOUNT=RAND()*10
DECLARE @K AS INT=0
DECLARE @AMOUNT AS INT
	WHILE @K<@PRODUCTCOUNT
	BEGIN
		SET @PRODUCT_ID=RAND()*28110
		SET @AMOUNT =1+(RAND()*4)
		SET @CREAT_DATE=ISNULL((SELECT MAX(CREAT_DATE) FROM BASKET_DETAIL WHERE BASKET_ID=@BASKET_ID),@CREAT_DATE)
		SET @CREAT_DATE=DATEADD(SECOND,RAND()*150, @CREAT_DATE)
		INSERT INTO BASKET_DETAIL( BASKET_ID, CREAT_DATE, PRODUCT_ID, AMOUNT, PRICE, TOTAL_PRICE)
		SELECT   @BASKET_ID,@CREAT_DATE,@PRODUCT_ID,@AMOUNT,PRICE,PRICE*@AMOUNT FROM PRODUCT WHERE PRODUCT_ID=@PRODUCT_ID
		SET @K=@K+1
	END
----PAYMENT
DECLARE @TOTAL_PRICE AS FLOAT
SET @CREAT_DATE =DATEADD(SECOND,RAND()*50,@CREAT_DATE)
SELECT @TOTAL_PRICE=SUM(AMOUNT*PRICE) FROM BASKET_DETAIL WHERE BASKET_ID=@BASKET_ID
INSERT INTO PAYMENT (BASKET_ID, TOTAL_PRICE, PAYMENT_TYPE, CREAT_DATE)
VALUES (@BASKET_ID, @TOTAL_PRICE, ROUND(RAND()*5,0), @CREAT_DATE)


--UPDATE BASKET SET STATUS_=1 WHERE ID=@BASKETID
--ORDER
INSERT INTO ORDER_ ( CUSTOMER_ID, ADDRESS_ID, BASKET_ID, CREAT_DATE)
VALUES (@CUSTOMER_ID,@ADDRESS_ID,@BASKET_ID,@CREAT_DATE)

SET @ORDER_ID=@@IDENTITY
--ORDER_DETAIL
DECLARE @INVOICE_ID AS INT

INSERT INTO ORDER_DETAIL(ORDER_ID, BASKET_DETAIL_ID, PRODUCT_ID, AMOUNT, PRICE, TOTAL_PRICE)
SELECT @ORDER_ID, BASKET_DETAIL_ID, PRODUCT_ID, AMOUNT, PRICE, AMOUNT*PRICE ASTOTALPRICE FROM BASKET_DETAIL WHERE BASKET_ID=@BASKET_ID

--INVOICE
DECLARE @INVOICE_NO AS VARCHAR(100)
SELECT  @INVOICE_NO=REPLACE(CONVERT(VARCHAR,GETDATE(),104),'.','')+'-'+REPLACE(CONVERT(VARCHAR,GETDATE(),108),':','')
INSERT INTO [dbo].[INVOICE] (ORDER_ID, INVOICE_NO, CREAT_DATE)
VALUES (@ORDER_ID,@INVOICE_NO,DATEADD(SECOND,(100000+RAND()*250000),@CREAT_DATE))


 SET @INVOICE_ID=@@IDENTITY

INSERT INTO INVOICE_DETAIL (INVOICE_ID, ORDER_DETAIL_ID, PRODUCT_ID, PRICE, AMOUNT,TOTAL_PRICE)
SELECT @INVOICE_ID, ORDER_DETAIL_ID, PRODUCT_ID, PRICE, AMOUNT, PRICE*AMOUNT FROM ORDER_DETAIL WHERE ORDER_ID=@ORDER_ID
--SELECT @USERID,@DATE ,@ADDRESSCOUNT,@ADDRESID



SET @I=@I+1 
END


***************************************************************************************

*************************** Sorgu View Trigger


** Kullanıcının adres bilgisi

select C.CUSTOMER_USERNAME, C.NAME_SURNAME, C.EMAIL,C.PHONE, A.ADDRESS_TEXT
FROM CUSTOMER C
JOIN ADDRESS A   ON C.CUSTOMER_ID=A.CUSTOMER_ID
WHERE C.CUSTOMER_ID=1



** Inner join

select customer.NAME_SURNAME , address. * from customer
inner join address on address.CUSTOMER_ID=CUSTOMER.CUSTOMER_ID
where customer.CUSTOMER_ID in (100,101,102)




** Coklu tablo

select C.*, A.*,CT.CITY_NAME,T.TOWN_NAME
from CUSTOMER C
JOIN ADDRESS A ON C.CUSTOMER_ID=A.CUSTOMER_ID
JOIN CITY CT ON A.CITY_ID=CT.CITY_ID
JOIN TOWN T ON A.TOWN_ID=T.TOWN_ID
where C.CUSTOMER_ID=1




** Bır kullanıcın kaç adresi olduğunu bulan sorgu

select 
C.CUSTOMER_USERNAME AS KULLANICI_ADI,
C.CUSTOMER_USERNAME AS AD_SOYAD,
C.EMAIL,
C.PHONE,
COUNT(A.ADDRESS_ID) AS ADDRESS_SAYISI
from CUSTOMER C
JOIN ADDRESS A ON C.CUSTOMER_ID=A.CUSTOMER_ID
WHERE C.CUSTOMER_ID=1
GROUP BY C.CUSTOMER_USERNAME,
C.CUSTOMER_USERNAME,
C.EMAIL,
C.PHONE




** Address sayısı en fazla olan kullanıcıları büyükten kücüğe sıralayan sorgu

select 
C.CUSTOMER_USERNAME AS KULLANICI_ADI,
C.CUSTOMER_USERNAME AS AD_SOYAD,
C.EMAIL,
C.PHONE,
COUNT(A.ADDRESS_ID) AS ADDRESS_SAYISI
from CUSTOMER C
JOIN ADDRESS A ON C.CUSTOMER_ID=A.CUSTOMER_ID
--WHERE C.CUSTOMER_ID=1
GROUP BY C.CUSTOMER_USERNAME,
C.CUSTOMER_USERNAME,
C.EMAIL,
C.PHONE
ORDER BY ADDRESS_SAYISI  DESC





** Bir tane address sayısı olanlar(HAVING)

select 
C.CUSTOMER_USERNAME AS KULLANICI_ADI,
C.CUSTOMER_USERNAME AS AD_SOYAD,
C.EMAIL,
C.PHONE,
COUNT(A.ADDRESS_ID) AS ADDRESS_SAYISI
from CUSTOMER C
JOIN ADDRESS A ON C.CUSTOMER_ID=A.CUSTOMER_ID
--WHERE C.CUSTOMER_ID=1
GROUP BY C.CUSTOMER_USERNAME,
C.CUSTOMER_USERNAME,
C.EMAIL,
C.PHONE
HAVING COUNT(A.ADDRESS_ID)=1





** Hangi şehirde kaç kullanıcı var

select 
CT.CITY_NAME,
COUNT(C.CUSTOMER_ID) AS KULLANICI_SAYISI
from CUSTOMER C
JOIN ADDRESS A ON C.CUSTOMER_ID=A.CUSTOMER_ID
JOIN CITY CT ON A.CITY_ID=CT.CITY_ID
GROUP BY CT.CITY_NAME
ORDER BY 2 DESC



**PROCEDURE

CREATE PROCEDURE AddProduct
@PRODUCT_CODE nvarchar(20),
@PRODUCT_NAME nvarchar(100),
@PRICE float
AS
BEGIN
INSERT INTO PRODUCT(PRODUCT_CODE,PRODUCT_NAME,PRICE)
VALUES(@PRODUCT_CODE,@PRODUCT_NAME,@PRICE)
END

*ORN
EXEC AddProduct '199944','MALATYA KAYISI',44
SELECT [PRODUCT_ID]
      ,[PRODUCT_CODE]
      ,[PRODUCT_NAME]
      ,[PRICE]
  FROM [E_Ticaret].[dbo].[PRODUCT]
  where PRODUCT_CODE=199944
  


CREATE PROCEDURE GetCustomerBeforeDate
@ORDER_CREAT_DATE DATE
AS
BEGIN
SELECT * FROM ORDER_
WHERE CREAT_DATE< @ORDER_CREAT_DATE
END


CREATE PROCEDURE GetCustomerAfterDate
@ORDER_CREAT_DATE DATE
AS
BEGIN
SELECT * FROM ORDER_
WHERE CREAT_DATE> @ORDER_CREAT_DATE
END


**VIEW

CREATE VIEW CustomerInfermationView
AS 
SELECT 
CUSTOMER_ID,CUSTOMER_USERNAME,NAME_SURNAME,GENDER,BIRTHDATE
FROM
CUSTOMER



CREATE VIEW AddressInfermationView
AS 
SELECT 
A.ADDRESS_ID,
C.COUNTRY_NAME,
CT.CITY_NAME,
T.TOWN_NAME,
A.ADDRESS_TEXT
FROM
ADDRESS A
INNER JOIN COUNTRY C ON A.COUNTRY_ID=C.COUNTRY_ID
INNER JOIN CITY CT ON A.CITY_ID=CT.CITY_ID
INNER JOIN TOWN T ON A.TOWN_ID=T.TOWN_ID



**TRIGGER

CREATE trigger TR_EMAIL_CONTROL
ON CUSTOMER
AFTER INSERT
AS BEGIN
SET NOCOUNT ON
			IF(SELECT COUNT(*) FROM INSERTED WHERE CHARINDEX('@',EMAIL)>0 AND 
			CHARINDEX('.',SUBSTRING(EMAIL,CHARINDEX('@',EMAIL)+1,LEN(EMAIL)))>0 )=0
			BEGIN
			RAISERROR('GECERLI BIR EMAIL ADRESI GIRINIZ!',16,1)
			ROLLBACK
			END
END
  
